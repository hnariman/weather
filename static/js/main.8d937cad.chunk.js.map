{"version":3,"sources":["components/Header.jsx","components/WeatherCard.jsx","App.js","index.js"],"names":["Header","city_name","country_code","className","WeatherCard","max_temp","min_temp","temp","wind_cdir_full","datetime","sunrise_ts","sunset_ts","ts","sunset","Date","toLocaleTimeString","hour12","hour","minute","sunrise","toLocaleString","weekday","toUpperCase","App","state","data","loading","this","setState","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","then","res","json","map","x","console","log","catch","err","index","key","React","Component","Loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAWeA,G,KARA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3B,OACE,yBAAKC,UAAU,SACb,gCAAMF,EAAN,SACA,gCAAMC,MCuCGE,EA5CK,SAAC,GASd,IARLC,EAQI,EARJA,SACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,KAEAC,GAII,EALJC,SAKI,EAJJD,gBACAE,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,GAEMC,EAAS,IAAIC,KAAiB,IAAZH,GAAkBI,mBAAmB,QAAS,CACpEC,QAAQ,EACRC,KAAM,UACNC,OAAQ,YAEJC,EAAU,IAAIL,KAAkB,IAAbJ,GAAmBK,mBAAmB,QAAS,CACtEC,QAAQ,EACRC,KAAM,UACNC,OAAQ,YAEV,OACE,yBAAKf,UAAU,WACb,wBAAIA,UAAU,QACZ,4BACG,IAAIW,KAAU,IAALF,GAAWQ,eAAe,QAAS,CAC3CC,QAAS,UAGb,wCAAcF,GACd,uCAAaN,IAEf,wBAAIV,UAAU,QACZ,mCAASE,EAAT,WACA,sCAAYE,EAAZ,WACA,qCAAWD,EAAX,YAEF,wBAAIH,UAAU,QACZ,uCACA,gCAAMK,EAAec,cAArB,QClCFC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,SAAS,G,kEAEU,IAAD,OAClBC,KAAKC,SAAS,CAAEF,SAAS,IACzBG,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAMC,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAElCC,MAAM,oDAAD,OACiDH,EADjD,gBACiEE,EADjE,uBADO,qCAITE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACZ,GACL,EAAKG,SAAS,CAAEH,OAAMC,SAAS,IAC/BD,EAAKA,KAAKe,KAAI,SAACC,GAAD,OAAOC,QAAQC,IAAIF,SAElCG,OAAM,SAACC,GAAD,OAASA,U,+BAKpB,OACE,6BAAS1C,UAAU,OACjB,kBAAC,EAAWwB,KAAKH,MAAMC,MACtBE,KAAKH,MAAME,SAAW,kBAAC,EAAD,MACtBC,KAAKH,MAAME,SACVC,KAAKH,MAAMC,KAAKA,KAAKe,KAAI,SAACC,EAAGK,GAC3B,OACE,yBAAKC,IAAKD,GACR,kBAAC,EAAgBL,Y,GAhCfO,IAAMC,WAyClBC,EAAU,WACd,OAAO,kDAGM3B,IC/Cf4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8d937cad.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"../style.scss\";\nconst Header = ({ city_name, country_code }) => {\n  return (\n    <div className=\"title\">\n      <h1> {city_name} city</h1>\n      <h2> {country_code}</h2>\n    </div>\n  );\n};\nexport default Header;\n","import React from \"react\";\n\nconst WeatherCard = ({\n  max_temp,\n  min_temp,\n  temp,\n  datetime,\n  wind_cdir_full,\n  sunrise_ts,\n  sunset_ts,\n  ts,\n}) => {\n  const sunset = new Date(sunset_ts * 1000).toLocaleTimeString(\"en-US\", {\n    hour12: false,\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  });\n  const sunrise = new Date(sunrise_ts * 1000).toLocaleTimeString(\"en-US\", {\n    hour12: false,\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  });\n  return (\n    <div className=\"weather\">\n      <ul className=\"time\">\n        <li>\n          {new Date(ts * 1000).toLocaleString(\"en-US\", {\n            weekday: \"long\",\n          })}\n        </li>\n        <li>Sunrise: {sunrise}</li>\n        <li>Sunset: {sunset}</li>\n      </ul>\n      <ul className=\"temp\">\n        <li>Max:{max_temp} &#8451;</li>\n        <li> Temp: {temp} &#8451;</li>\n        <li> Min: {min_temp} &#8451;</li>\n      </ul>\n      <ul className=\"wind\">\n        <li> Wind: </li>\n        <li> {wind_cdir_full.toUpperCase()} </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport Header from \"./components/Header\";\nimport WeatherCard from \"./components/WeatherCard.jsx\";\n\nclass App extends React.Component {\n  state = {\n    data: [],\n    loading: true,\n  };\n  componentDidMount() {\n    this.setState({ loading: true });\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const key = \"225a713f3a21409c916a8cace794e454\";\n      fetch(\n        `http://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&days=5&key=${key}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState({ data, loading: false });\n          data.data.map((x) => console.log(x));\n        })\n        .catch((err) => err);\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"App\">\n        <Header {...this.state.data} />\n        {this.state.loading && <Loading />}\n        {this.state.loading ||\n          this.state.data.data.map((x, index) => {\n            return (\n              <div key={index}>\n                <WeatherCard {...x} />\n              </div>\n            );\n          })}\n      </section>\n    );\n  }\n}\n\nconst Loading = () => {\n  return <h1> DATA IS LOADING </h1>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}